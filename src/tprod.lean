import tactic
import topology.instances.real
import order.filter.at_top_bot

variables {Œ± : Type*} {Œ≤ : Type*} {Œ≥ : Type*} {Œ¥ : Type*}
noncomputable theory
open finset filter function classical
open_locale topological_space classical big_operators nnreal

variables [comm_monoid Œ±] [topological_space Œ±]

def has_prod (f : Œ≤ ‚Üí Œ±) (a : Œ±) : Prop := 
tendsto (Œªs:finset Œ≤, ‚àè b in s, f b) at_top (ùìù a)

def prodable (f : Œ≤ ‚Üí Œ±) : Prop := ‚àÉa, has_prod f a

@[irreducible] def tprod {Œ≤} (f : Œ≤ ‚Üí Œ±) := 
if h : prodable f then classical.some h else 1
